<Application x:Class="KutuhaneTakipPro.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:KutuhaneTakipPro"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <!--Mini Butonlar-->
        <Style x:Key="minibutonlar" TargetType="Button">
            <Setter Property="Foreground" Value="#FF787878"/>
            <Setter Property="Width" Value="35"/>
            <Setter Property="FontSize" Value="9"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderThickness" Value="0,0,0,0"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" 
                            BorderThickness="0,0,0,0"
                            BorderBrush="#FF8F8F8F" 
                            Background="White">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="white" />
                                <Setter TargetName="border" Property="Background" Value="#FF0F2E80" />
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--Hamburger Butonlar-->
        <Style x:Key="hamburgerbutonlar" TargetType="Image">
            <Setter Property="Opacity" Value="0.7"/>
            <Setter Property="Width" Value="16"/>
            <Style.Triggers >
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Opacity" Value="1"/>
                    <Setter Property="Width" Value="20"/>
                </Trigger>
            </Style.Triggers>

        </Style>

        <!--Menu ToggleButonlar-->
        <Style x:Key="menubutonlar" TargetType="ToggleButton">
            <Setter Property="Foreground" Value="#FF787878"/>
            <Setter Property="Margin" Value="0,0,0,1"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Name="border" 
                            BorderThickness="5,0,0,0"
                            BorderBrush="{x:Null}" 
                            Background="{x:Null}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#2e61af" />
                                <Setter TargetName="border" Property="Background" Value="#2e61af" />
                                <Setter TargetName="border" Property="BorderThickness" Value="5,0,0,0" />
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>

                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="white" />
                                <Setter TargetName="border" Property="Background" Value="#2e61af" />
                                <Setter TargetName="border" Property="BorderThickness" Value="5,0,0,0" />
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--uc Butonlar-->
        <Style x:Key="userKontolKitapEkleButon" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Foreground" Value="#FF2989E8"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Margin" Value="0,0,15,0"/>
            <Setter Property="Width" Value="85"/>
            <Setter Property="Height" Value="24"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" 
                            BorderThickness="1,1,1,1"
                            BorderBrush="#FF2989E8" 
                            Background="{x:Null}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF8ECDF1" />
                                <Setter Property="Foreground" Value="White"/>


                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Textboxlar-->
        <Style x:Key="MoseOverImageChange_Textbox" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="BorderBrush" Value="#FF032D6C"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFEFF4FD"/>
                    <Setter Property="BorderBrush" Value="#FF2F5DAC"/>
                </Trigger>
            </Style.Triggers>
        </Style>



        <!--Kitap Ekle Labeller-->
        <Style x:Key="Label_KitapEkle" TargetType="Label">
            <Setter Property="Width" Value="102"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="Foreground" Value="white"/>
            <Setter Property="Background" Value="#FF032D6C"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>


        <!-- daire Button-->
        <Style x:Key="DaireButon" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Ellipse x:Name="Butondaire" Width="41" Height="41" Fill="#3e75c7"/>
                            <Label  x:Name="ButondaireLabel" Content="+" Foreground="White" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" />
                            <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Butondaire" Property="Width" Value="45" />
                                <Setter TargetName="Butondaire" Property="Height" Value="45" />
                                <Setter TargetName="Butondaire" Property="Fill" Value="#73a5f1" />
                                <Setter TargetName="ButondaireLabel" Property="FontSize" Value="9"/>
                                <Setter TargetName="ButondaireLabel" Property="Content" Value="Resim&#xa; Ekle"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- daire Button iptal-->
        <Style x:Key="DaireButoniptal" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Ellipse x:Name="Butondaire" Width="55" Height="55" Fill="#FF032D6C" Stroke="White" />
                            <Image Source="images/icon/kitapiptalet.png" Width="33" Height="auto" ToolTip="İptal Et!"/>

                            <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Butondaire" Property="Width" Value="58" />
                                <Setter TargetName="Butondaire" Property="Height" Value="58" />
                                <Setter TargetName="Butondaire" Property="Fill" Value="#FF530707" />
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- daire Button bilgi-->
        <Style x:Key="DaireButonbilgi" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Ellipse x:Name="Butondaire" Width="55" Height="55" Fill="#FF032D6C" Stroke="White" />
                            <Image Source="images/icon/bilgiveren.png" Width="35" Height="auto" ToolTip="Bilgilen"/>

                            <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Butondaire" Property="Width" Value="60" />
                                <Setter TargetName="Butondaire" Property="Height" Value="60" />
                                <Setter TargetName="Butondaire" Property="Fill" Value="#FF2965C1" />
                                <Setter Property="Cursor" Value="Hand"/>

                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Dönme Efekti-->

        <Style x:Key="don_dunya" TargetType="Ellipse">
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Style.Triggers>

                <EventTrigger RoutedEvent="Loaded">

                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(Ellipse.RenderTransform).(RotateTransform.Angle)" To="360" Duration="0:0:10" RepeatBehavior="Forever"/>
                        </Storyboard>
                    </BeginStoryboard>


                </EventTrigger>

            </Style.Triggers>


        </Style>


        <!--BLINK efekti-->
        <Style x:Key="Label_yanipson" TargetType="Label">

            <Style.Triggers>

                <EventTrigger RoutedEvent="Label.Loaded">

                    <BeginStoryboard>

                        <Storyboard TargetProperty="Opacity" RepeatBehavior="Forever">

                            <DoubleAnimation  Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:2" />

                        </Storyboard>

                    </BeginStoryboard>

                </EventTrigger>

            </Style.Triggers>

        </Style>











        <!--Combobox Style-->

        <!-- Flat ComboBox -->
        <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#134187" />
        <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#ffffff" />
        <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
        <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />

        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" Name="Border"
              BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" 
              CornerRadius="0" BorderThickness="0, 0, 0, 1" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
                <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
              CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

                <Path Name="Arrow" Grid.Column="1" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center" Fill="#444"
            VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                    <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="White"/>
            <Setter Property="TextElement.FontSize" Value="15"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                            <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center" 
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Hidden" Background="Transparent"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <!-- Popup showing items -->
                            <Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" Background="#134187" Margin="0, 1, 0, 0"
                        CornerRadius="0,0,4,4" BorderThickness="1,1,1,1" 
                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- End of Flat ComboBox -->



        <!-- DataGrid style -->
        <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
            <Setter Property="ColumnHeaderStyle" Value="{DynamicResource ColumnHeaderStyle1}"/>
            <Setter Property="CellStyle" Value="{DynamicResource ColumnrowStyle}"/>

        </Style>
        <!-- DataGridColumnHeader style -->
        <Style x:Key="ColumnHeaderStyle1" TargetType="DataGridColumnHeader">
            <Setter Property="Height" Value="37"/>
            <Setter Property="Background" Value="#FF134187"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Padding" Value="5,5,5,5"/>
            <Setter Property="BorderBrush" Value="#FF134187"/>
            <Setter Property="BorderThickness" Value="4,0,0,0"/>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="ToolTip" Value="Tıkla Ve Grupla"/>
                </Trigger>
            </Style.Triggers>

        </Style>

        <Style x:Key="ColumnrowStyle" TargetType="DataGridCell">

            <Setter Property="Background" Value="{x:Null}" />

            <Setter Property="BorderThickness" Value="4,0,0,0"/>
            <Setter Property="BorderBrush" Value="#eeeeee"/>
            <Setter Property="Padding" Value="5,5,5,5"/>
            <Setter Property="Foreground" Value="#FF042263"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="FontSize" Value="12"/>

            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#3168bc"/>
                    <Setter Property="BorderBrush" Value="#FF042263"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>

        </Style>






    </Application.Resources>
</Application>
